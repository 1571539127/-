<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lijp.muban.mapper.BlogUserMapper">
  <resultMap id="BaseResultMap" type="com.lijp.muban.dao.BlogUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_image" jdbcType="BLOB" property="userImage" />
    <result column="user_register_time" jdbcType="TIMESTAMP" property="userRegisterTime" />
    <result column="user_last_time" jdbcType="TIMESTAMP" property="userLastTime" />
    <result column="user_createtime" jdbcType="TIMESTAMP" property="userCreatetime" />
    <result column="user_updatetime" jdbcType="TIMESTAMP" property="userUpdatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_password, user_email,user_image, user_register_time, user_last_time, 
    user_createtime, user_updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_user
<!--     <where> -->
<!--     <if test="userId !=null and userId !=''">user_id = #{userId,jdbcType=INTEGER}  -->
<!--     </if></where> -->
     limit #{page},#{limit}
  </select>
  
  <select id="getCountUser" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*)  from blog_user
   <where>
    <if test="userId !=null and userId !=''">user_id = #{userId,jdbcType=INTEGER}
    </if>
    </where></select>

  <select id="selectUser" parameterType="com.lijp.muban.dao.BlogUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog_user 
    <where>
    <if test="userId !=null and userId !=''">user_id=#{userId,jdbcType=INTEGER} </if>
    <if test="userName !=null and userName !=''">and user_name=#{userName,jdbcType=VARCHAR} </if>
    <if test="userPassword !=null and userPassword !=''">and user_password=#{userPassword,jdbcType=VARCHAR}</if>
    </where>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lijp.muban.dao.BlogUser">
    insert into blog_user (user_id, user_name, user_password, 
      user_email, user_image,user_register_time, user_last_time, 
      user_createtime, user_updatetime)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR},#{userImage,jdbcType=BLOB}, #{userRegisterTime,jdbcType=TIMESTAMP}, #{userLastTime,jdbcType=TIMESTAMP}, 
      #{userCreatetime,jdbcType=TIMESTAMP}, #{userUpdatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lijp.muban.dao.BlogUser">
    insert into blog_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userImage != null">
        user_image,
      </if>
      <if test="userRegisterTime != null">
        user_register_time,
      </if>
      <if test="userLastTime != null">
        user_last_time,
      </if>
      <if test="userCreatetime != null">
        user_createtime,
      </if>
      <if test="userUpdatetime != null">
        user_updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null">
        #{user_image,jdbcType=BLOB},
      </if>
      <if test="userRegisterTime != null">
        #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastTime != null">
        #{userLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userCreatetime != null">
        #{userCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userUpdatetime != null">
        #{userUpdatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijp.muban.dao.BlogUser">
    update blog_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null">
        user_image = #{userImage,jdbcType=BLOB},
      </if>
      <if test="userRegisterTime != null">
        user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastTime != null">
        user_last_time = #{userLastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userCreatetime != null">
        user_createtime = #{userCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="userUpdatetime != null">
        user_updatetime = #{userUpdatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijp.muban.dao.BlogUser">
    update blog_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_image = #{userImage,jdbcType=BLOB},
      user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      user_last_time = #{userLastTime,jdbcType=TIMESTAMP},
      user_createtime = #{userCreatetime,jdbcType=TIMESTAMP},
      user_updatetime = #{userUpdatetime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>